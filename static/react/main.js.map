{"version":3,"sources":["DirectoryViews/GridView.js","DirectoryViews/ViewManager.js","BentoButton.js","MainMenu.js","SlideMenu.js","Directory.js","Editor.js","App.js","serviceWorker.js","index.js"],"names":["GridView","items","i","this","props","folders","length","push","type","name","path","id","documents","doc_type","style","textAlign","maxWidth","margin","display","gridTemplateColumns","React","Component","Item","link","href","icon","pieces","split","faFolder","size","faFileAlt","textDecoration","ViewManager","state","view","BentoButton","hover","toggleHover","bind","setState","width","float","onMouseEnter","onMouseLeave","onClick","MainMenu","window","location","console","log","backgroundColor","height","faBars","open_menu","faHome","go_home","marginLeft","fontSize","axios","get","folder","then","response","data","SlideMenu","position","show","links","action","flex","text","Directory","faPlus","new_doc","faFolderPlus","alert","faCog","a","prompt","fetch","method","mode","headers","body","JSON","stringify","author","resp","json","url","Diff","require","Editor","time","Date","getTime","content","old_content","hash","timestamp","diff_stack","checking","updateContent","str","reduce","prevHash","currVal","charCodeAt","patch","createPatch","context","patch_lines","splice","join","diff","document","diff_hash","hashCode","post","status","reason","postStack","value","onChange","spellChecker","c","head","setInterval","check","fillContent","hashes","includes","postData","pullData","error","App","disp","bento_type","bento_id","bento_name","className","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"main.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFolder, faFileAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport class GridView extends React.Component {\n//\tconstructor(props) {\n//\t\tsuper(props);\n//\t}\n\n\trender() {\n\t\tlet items = [];\n\t\tfor(let i = 0; i < this.props.folders.length; i++)\n\t\t\titems.push(<Item type='folder' \n\t\t\t\t\t\t\tname={this.props.folders[i].path}\n\t\t\t\t\t\t\tid={this.props.folders[i].id}></Item>);\n\t\tif (this.props.documents)\n\t\t\tfor(let i = 0; i < this.props.documents.length; i++)\n\t\t\t\titems.push(<Item type={this.props.documents[i].doc_type}\n\t\t\t\t\t\t\t\t name={this.props.documents[i].name}\n\t\t\t\t\t\t\t\t id={this.props.documents[i].id}></Item>);\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={{textAlign: 'left', maxWidth: '50%', margin: 'auto', display: 'grid', gridTemplateColumns:'auto auto auto'}}>\n\t\t\t\t\t{ items }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport class Item extends React.Component {\n//\tconstructor(props) {\n//\t\tsuper(props);\n//\t}\n\t\n\trender() {\n\t\tlet symbol = '⁉';\n\t\tlet link = <p>loading...</p>;\n\t\tlet href = null;\n\t\tlet icon = null;\n\t\tlet name = null;\n\t\tif (this.props.type === 'folder')\n\t\t{\n\t\t\tlet pieces = this.props.name.split('/');\n\t\t\thref = '/folder/' + this.props.id\n\t\t\ticon = <FontAwesomeIcon icon={faFolder} size=\"6x\"/>\n\t\t\tname = pieces[pieces.length -2]\n\t\t}\n\t\telse if (this.props.type === 'text')\n\t\t{\n\t\t\thref = '/doc/' + this.props.id\n\t\t\ticon = <FontAwesomeIcon icon={faFileAlt} size=\"6x\"/>\n\t\t\tname = this.props.name\n\t\t}\n\t\t\t\n\t\tlink = (<a href={href} style={{'color':'white',textDecoration:'none'}}>\n\t\t\t<div >\n\t\t\t\t{icon}\n\t\t\t</div>\n\t\t\t<div >\n\t\t\t\t<h3> {name}</h3>\n\t\t\t</div></a>)\n\n\t\treturn (\n\t\t\t<div >\n\t\t\t\t<center>\n\t\t\t\t\t{link}\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport { GridView } from \"./GridView.js\";\n\nexport class ViewManager extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {view:\"Grid\"}\n\t}\n\n\trender() {\n\t\tlet view = (<p>loading...</p>);\n\t\tif (this.state.view === 'Grid')\n\t\t\tview = (<GridView folders={this.props.folders} documents={this.props.documents}></GridView>);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{view}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport class BentoButton extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {hover: false}\n\t\tthis.toggleHover = this.toggleHover.bind(this);\n\t}\n\n\ttoggleHover() {\n\t\tthis.setState({hover: !this.state.hover});\n\t}\n\n\trender() {\n\t\tlet style = {width:\"50px\",float:this.props.float}\n\n\t\tif (this.state.hover)\n\t\t\tstyle['backgroundColor'] = '#ba5739'\n\n\t\treturn (\n\t\t\t<div style={style} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={this.props.onClick}>\n\t\t\t\t<FontAwesomeIcon icon={this.props.icon} size=\"3x\"/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faHome, faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { BentoButton } from './BentoButton.js'\n\nexport class MainMenu extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t\n\tgo_home()\n\t{\n\t\twindow.location.href=\"/\";\n\t}\n\n\trender() {\n\t\tlet items = [];\n\t\tconsole.log(this.state);\n\t\t//<button onClick={new_doc}>New</button>\n\t\t//<h2>Current path: {this.props.folder}</h2>\n\t\t//<BentoButton icon={faSearch} float=\"right\"> </BentoButton>\n\t\treturn (\n\t\t\t<div style={{width:\"100%\", backgroundColor:\"#a0300e\", height:\"50px\"}}>\n\t\t\t\t<BentoButton icon={faBars} float=\"left\" onClick={this.props.open_menu}> </BentoButton>\n\t\t\t\t<BentoButton icon={faHome} float=\"left\" onClick={this.go_home}> </BentoButton>\n\t\t\t\t<div style={{float:\"left\", marginLeft:\"25px\", fontSize:\"40px\"}}>\n\t\t\t\t\tHome\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount()\n\t{\n\t\tif('folder' in this.props)\n\t\t\taxios.get('/api/folder/' + this.props.folder)\n\t\t\t.then(response => this.setState(response.data));\n\t\telse\n\t\t\taxios.get('/api/folder/1')\n\t\t\t.then(response => this.setState(response.data));\n\t}\n}\n\nasync function new_doc()\n{ \n\tlet name = prompt(\"Name of new document: \",\"Untitled\"); \n\tconsole.log(name); \n\tawait fetch('/api/doc/', { \n\t\tmethod: 'POST', \n\t\tmode: 'cors', \n\t\theaders: {'Content-Type': 'application/json'}, \n\t\tbody: JSON.stringify({name:name, author:'Toben', path:'/'})}) \n\t\t.then(function(resp) { \n\t\t\tconsole.log('resp: '); \n\t\t\tconsole.log(resp); \n\t\t\treturn resp.json(); \n\t\t}).then(function(data) { \n\t\t\tconsole.log(data); \n\t\t\tlet url = '/doc/' + data['id']; \n\t\t\tconsole.log(url); \n\t\t\twindow.location = url; \n\t\t}); \n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport class SlideMenu extends React.Component {\n\n\trender() {\n\t\t\n\t\tlet style = {width:\"300px\",position:\"absolute\",height:\"100%\",backgroundColor:\"#ba5739\"}\n\t\tif (this.props.show)\n\t\t\tstyle['display'] = 'block'\n\t\telse\n\t\t\tstyle['display'] = 'none'\n\t\t\n\t\tconsole.log('rendering items');\n\t\tlet items = []\n\t\tfor (let i = 0; i < this.props.links.length; i++)\n\t\t{\n\t\t\titems.push(<div style={{display:\"flex\"}} onClick={this.props.links[i].action}>\n\t\t\t\t<FontAwesomeIcon icon={this.props.links[i].icon} size=\"3x\" style={{flex:1}}/>\n\t\t\t\t<span style={{flex:3, fontSize:\"40px\"}}>{this.props.links[i].text}</span>\n\t\t\t</div>)\n\t\t}\n\t\tconsole.log(items);\n\t\treturn (\n\t\t\t<div style={style}>\n\t\t\t\t{ items }\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport axios from 'axios';\nimport { ViewManager } from './DirectoryViews/ViewManager.js'\nimport { MainMenu } from './MainMenu.js'\nimport { SlideMenu } from './SlideMenu.js'\nimport { faPlus, faFolderPlus, faCog } from '@fortawesome/free-solid-svg-icons'\n\nexport class Directory extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {'folders': [], 'documents': [], 'show':false}\n\t\tthis.open_menu = this.open_menu.bind(this);\n\t}\n\t\n\topen_menu()\n\t{\n\t\tconsole.log('opening menu');\n\t\tconsole.log(this.state);\n\t\tthis.setState({show: !this.state.show});\n\t}\n\n\t\n\trender() {\n\t\tlet items = [{icon:faPlus,text:'New File',action:new_doc},\n\t\t\t\t\t{icon:faFolderPlus,text:'New Folder',action:() => {alert('Coming soon!')}},\n\t\t\t\t\t{icon:faCog,text:'Settings',action:() => {alert('Coming soon!')}}];\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<h1 style={{width:\"100%\", backgroundColor:\"#a0300e\", margin:\"0px\"}}>Bento!</h1> \n\t\t\t\t\t<MainMenu path={this.props.folder} open_menu={this.open_menu}></MainMenu>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<SlideMenu show={this.state.show} links={items}></SlideMenu>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<ViewManager folders={this.state.folders} documents={this.state.documents}></ViewManager>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount()\n\t{\n\t\tif('folder' in this.props)\n\t\t\taxios.get('/api/folder/' + this.props.folder)\n\t\t\t.then(response => this.setState(response.data));\n\t\telse\n\t\t\taxios.get('/api/folder/1')\n\t\t\t.then(response => this.setState(response.data));\n\t}\n}\n\nasync function new_doc()\n{ \n\tlet name = prompt(\"Name of new document: \",\"Untitled\"); \n\tconsole.log(name); \n\tawait fetch('/api/doc/', { \n\t\tmethod: 'POST', \n\t\tmode: 'cors', \n\t\theaders: {'Content-Type': 'application/json'}, \n\t\tbody: JSON.stringify({name:name, author:'Toben', path:'/'})}) \n\t\t.then(function(resp) { \n\t\t\tconsole.log('resp: '); \n\t\t\tconsole.log(resp); \n\t\t\treturn resp.json(); \n\t\t}).then(function(data) { \n\t\t\tconsole.log(data); \n\t\t\tlet url = '/doc/' + data['id']; \n\t\t\tconsole.log(url); \n\t\t\twindow.location = url; \n\t\t}); \n}\n","import React from 'react';\nimport axios from 'axios';\n//import Diff from 'diff';\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\nlet Diff = require('diff');\n\n\nexport class Editor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tlet time = new Date().getTime();\n\t\tthis.state = {content: '', old_content: 'loading...', hash: 0, timestamp: time, diff_stack: [], checking:false}\n\t\tthis.updateContent = this.updateContent.bind(this);\n\t}\n\t\n\thashCode(str) {\n\t\treturn str.split('').reduce((prevHash, currVal) =>\n\t\t\t(((prevHash << 5) - prevHash) + currVal.charCodeAt(0))|0, 0);\n\t}\n\t\n\n\tasync postData ()\n\t{\n\t\tif (this.state.content !== this.state.old_content)\n\t\t{\n\t\t\tconsole.log('Start');\n\t\t\tconsole.log(this.state.old_content);\n\t\t\tconsole.log(this.state.content);\n\t\t\tconsole.log(this.state.diff_stack);\n\t\t\tconsole.log('end');\n\t\t\tlet patch = Diff.createPatch('doc',this.state.old_content, this.state.content, 'old header','new header', {context:0});\n\n\t\t\t// Trim extra lines out of the patch.\n\t\t\tlet patch_lines = patch.split('\\n');\n\t\t\tpatch_lines.splice(0,4);\n\t\t\tpatch = patch_lines.join('\\n');\n\t\t\t\n\t\t\tconsole.log(patch);\n\t\t\tconsole.log('Posting diff');\n\t\t\tlet diff = {\n\t\t\t\t'time':new Date().getTime(),\n\t\t\t\t'content':patch,\n\t\t\t\t'author':'toben',\n\t\t\t\t'document':this.props.document,\n\t\t\t\t'parent':this.state.diff_stack[this.state.diff_stack.length-1].diff_hash\n\t\t\t}\n\t\t\tlet hash = this.hashCode(JSON.stringify(diff));\n\t\t\tdiff['diff_hash'] = hash;\n\t\t\t\n\t\t\tlet diff_stack = this.state.diff_stack;\n\t\t\tdiff_stack.push(diff)\n\t\t\tthis.setState({hash: hash, timestamp:new Date().getTime(), old_content: this.state.content, diff_stack: diff_stack});\n\t\t\t\n\t\t\taxios.post('/api/diff/' + this.props.document, diff)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.status === 'failure')\n\t\t\t\t{\n\t\t\t\t\tif (response.data.reason === 'The diff provided as parent did not exist.')\n\t\t\t\t\t\tthis.postStack();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\tasync postStack()\n\t{\n\t\taxios.post('/api/diffs/' + this.props.document, this.state.diff_stack)\n\t\t.then((response) => {console.log(\"Stack posted\"); console.log(response);});\n\t}\n\tupdateContent(value)\n\t{\n//\t\tconsole.log(value);\n//\t\tconsole.log(this.state.diff_stack);\n//\t\tlet time = (new Date().getTime() - this.state.timestamp) / 1000;\n//\t\tconsole.log(time);\n//\t\tif (time > 2) // increase this value to decrease refresh rate. \n//\t\t\tthis.postData(value);\n\t\tthis.setState({content: value});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>{this.props.name}</h2>\n\t\t\t\t<br/>\n\t\t\t\t<SimpleMDE id=\"editor\" name=\"editor\" style={{textAlign:'left'}}\n\t\t\t\t\tonChange={this.updateContent} value={this.state.content} spellChecker=\"false\"/>\n\t\t\t\t<br/>\n\t\t\t\t<a href=\"/\">Back</a>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\tfillContent(data)\n\t{\n\t\tconsole.log(data);\n\t\tlet c = data[0].head;\n\t\tif (c == null)\n\t\t\tc = '';\n\t\tthis.setState({content:c,old_content:c,diff_stack:[data[1]]});\n\t\tsetInterval(() => {this.check()},2000);\n\t}\n\n\tcomponentDidMount()\n\t{\n\t\taxios.get('/api/doc/' + this.props.document)\n\t\t.then(response => this.fillContent(response.data));\n\t}\n\t\n\tpullData()\n\t{\n\t\taxios.get('/api/diff/' + this.props.document)\n\t\t.then(response => {\n\t\t\tif (response.data.diff_hash !== this.state.diff_stack[this.state.diff_stack.length-1].diff_hash)\n\t\t\t{\n\t\t\t\tlet hashes = [];\n\t\t\t\tfor(let i = 0; i < this.state.diff_stack.length; i++)\n\t\t\t\t\thashes.push(this.state.diff_stack[i].diff_hash);\n\t\t\t\t//The remote document has changed!\n\t\t\t\tif (!hashes.includes(response.data.diff_hash))\n\t\t\t\t\taxios.get('/api/doc/' + this.props.document)\n\t\t\t\t\t.then(response => this.fillContent(response.data));\n\t\t\t}\n\t\t});\n\t}\n\t\n\tcheck()\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Don't run if the previous check method is still running.\n\t\t\tif (this.state.checking)\n\t\t\t\treturn false\n\n\t\t\tthis.setState({checking:true});\n\t\t\t// Post current data\n\t\t\tthis.postData();\n\t\t\t\n\t\t\t// Check for updates from the server\n\t\t\tthis.pullData();\n\t\t\t\n\t\t\tthis.setState({checking:false});\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n}\n","import React from 'react';\nimport './App.css';\nimport { Directory } from './Directory.js';\nimport { Editor } from './Editor.js';\n\n\n\nfunction App() {\n\tlet disp = '';\n\tif (window.bento_type === 'folder')\n\t\tdisp = (<Directory folder={window.bento_id} name={window.bento_name}></Directory>)\n\telse\n\t\tdisp = (<Editor document={window.bento_id} name={window.bento_name}></Editor>)\n\treturn (\n\t\t<div className=\"App\">\n\t\t{ disp }\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}